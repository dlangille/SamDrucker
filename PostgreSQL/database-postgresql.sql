-- This is designed for PostgreSQL.

-- temporary table. Might only be used for testing
CREATE TABLE incoming_packages (
  id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  data json NOT NULL
  date_added timestamp without time zone NOT NULL default timezone('UTC'::text, now()),
  client_ip cidr not null default '198.51.100.0';
);



INSERT INTO incoming_packages (data) values (
'{
  "name": "foo.example.org",
  "os": "FreeBSD",
  "version": "12.0-RELEASE-p8",
  "repo": "http://pkg.freebsd.org/FreeBSD:12:amd64/latest/",
  "packages": [
     "SamDruckerClientShell-0.0.0.2.2019110101",
     "anvil-0.0.17",
     "ap24-mod_fastcgi-2.4.7.1"
     ]
}');

-- I am purposely not creating tables for os, version, and repo.
--
--CREATE TABLE os (
--  id int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
--  name text NOT NULL
--);
  
CREATE TABLE host (
  id int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  name    text NOT NULL,
  os      text NOT NULL,
  version text NOT NULL,
  repo    text NOT NULL,
  date_updated timestamp without time zone NOT NULL default timezone('UTC'::text, now()),
  UNIQUE (name)
);

-- this function and the tigger which follows it allows host.date_updated to be current

CREATE OR REPLACE FUNCTION update_date_updated()
RETURNS TRIGGER AS $$
BEGIN
    NEW.date_updated = timezone('UTC'::text, now());
    RETURN NEW;   
END
$$ language 'plpgsql';

  DROP TRIGGER update_host_date_updated ON update_host_date_updated;
CREATE TRIGGER update_host_date_updated
 BEFORE UPDATE ON host
 FOR EACH ROW EXECUTE PROCEDURE update_date_updated();


CREATE TABLE package (
  id int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  name text NOT NULL,
  UNIQUE (name)
);

CREATE TABLE package_version (
  id int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  package_id int NOT NULL references package(id) ON DELETE CASCADE,
  version  text NOT NULL,
  UNIQUE (package_id, version)
);

CREATE TABLE host_package (
  host_id            int NOT NULL references host(id)            ON DELETE CASCADE,
  package_version_id int NOT NULL references package_version(id) ON DELETE CASCADE,
  UNIQUE(host_id, package_version_id)
);
